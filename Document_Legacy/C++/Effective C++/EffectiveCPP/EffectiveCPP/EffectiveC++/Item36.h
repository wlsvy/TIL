#pragma once
#include <iostream>
#include <vector>
#include <string>
#include <functional>

//상속받은 비가상 함수를 파생 클래스에서 재정의하는 것은 절대 금물!

namespace Item36 {
	using namespace std;

	/*
		상속받은 비가상 함수를 재정의하는 일은 절대로 하지 맙시다.

		만약 비가상 함수를 정말 원해서 재정의 한 것이고, 
		재정의한 비가상 함수는 반드시 기본 클래스와 그 파생 클래스에서 같은 동작을 해야 한다고 정한것도 진짜라면, 
		비가상 함수의 재정의로 인해 "모든 파생 클래스는 기본 클래스의 일종" 이라는 명제는 거짓이 됩니다. 
		
		이런 상황이라면 두 클래스를 public 상속 관계로 만들면 안 됩니다.


		클래스 D는 클래스 B로부터 public 상속을 받아 파생시킬 수밖에 없는 사정이 있고, 
		진짜로 D에서 B의 비가상 함수를 재정의해야 한다면, 
		"비가상 함수는 클래스 파생에 상관없이 B에 대한 불변동작을 나타낸다."라는 점도 거짓이 됩니다. 
		
		이런 경우라면 그 비가상 함수는 가상 함수가 되어야 하는 것이 맞습니다.
	*/
}